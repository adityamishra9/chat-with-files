name: Build & Push Docker Images

on:
  push:
    branches: [ master ]
  workflow_dispatch: {}

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  IMAGE_NAMESPACE: ${{ secrets.DOCKERHUB_USERNAME }}
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      any_changed: ${{ steps.set-matrix.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch history so path diff works on push events
          fetch-depth: 0

      # Figure out what changed (or build all on manual runs)
      - id: set-matrix
        shell: bash
        run: |
          # If manually dispatched, build everything.
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo 'matrix=[{"name":"server","context":"./server","dockerfile":"./server/Dockerfile","scope":"server","image":"docchat-server"}, {"name":"client","context":"./client","dockerfile":"./client/Dockerfile","scope":"client","image":"docchat-client"}, {"name":"embedder","context":"./embed-server","dockerfile":"./embed-server/Dockerfile","scope":"embedder","image":"docchat-embedder"}]' >> "$GITHUB_OUTPUT"
            echo "any_changed=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Determine merge base to compare against
          BASE="$(git merge-base origin/${{ github.ref_name }} HEAD || echo '')"
          if [[ -z "$BASE" ]]; then BASE="HEAD^"; fi

          # Files changed since base
          CHANGED=$(git diff --name-only "$BASE"...HEAD)

          needs_all=false
          # If shared stuff changed, we rebuild everything
          while IFS= read -r f; do
            if [[ "$f" == shared/* || "$f" == package.json || "$f" == pnpm-lock.yaml || "$f" == yarn.lock || "$f" == .dockerignore || "$f" == .github/** ]]; then
              needs_all=true
              break
            fi
          done <<< "$CHANGED"

          declare -a rows=()
          add_row() {
            rows+=("{\"name\":\"$1\",\"context\":\"$2\",\"dockerfile\":\"$3\",\"scope\":\"$4\",\"image\":\"$5\"}")
          }

          if $needs_all; then
            add_row server ./server ./server/Dockerfile server docchat-server
            add_row client ./client ./client/Dockerfile client docchat-client
            add_row embedder ./embed-server ./embed-server/Dockerfile embedder docchat-embedder
          else
            # Add only components whose folder changed
            grep -Eq '^server/' <<< "$CHANGED"   && add_row server   ./server       ./server/Dockerfile         server   docchat-server
            grep -Eq '^client/' <<< "$CHANGED"   && add_row client   ./client       ./client/Dockerfile         client   docchat-client
            grep -Eq '^embed-server/' <<< "$CHANGED" && add_row embedder ./embed-server ./embed-server/Dockerfile embedder docchat-embedder
          fi

          if [[ ${#rows[@]} -eq 0 ]]; then
            echo "matrix=[]" >> "$GITHUB_OUTPUT"
            echo "any_changed=false" >> "$GITHUB_OUTPUT"
          else
            printf 'matrix=[%s]\n' "$(IFS=,; echo "${rows[*]}")" >> "$GITHUB_OUTPUT"
            echo "any_changed=true" >> "$GITHUB_OUTPUT"
          fi

  build-and-push:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.any_changed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.detect-changes.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set SHORT_SHA env
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.image }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.image }}:${{ env.SHORT_SHA }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha,scope=${{ matrix.scope }}
          cache-to: type=gha,mode=max,scope=${{ matrix.scope }}
          provenance: false
          sbom: false

  nothing-to-build:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.any_changed != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "No relevant changes. Skipping builds."
