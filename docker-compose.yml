name: docChat
services:
  # ---------------- infra ----------------
  valkey:
    image: valkey/valkey:7
    ports: ["6379:6379"]

  mongo:
    image: mongo:7
    ports: ["27018:27017"]
    volumes: [mongo_data:/data/db]

  qdrant:
    image: qdrant/qdrant:v1.13.4
    ports: ["6333:6333"]
    volumes: [qdrant_data:/qdrant/storage]

  # ---------------- embedder ----------------
  embedder:
    image: adityamishra9/docchat-embedder:1
    ports: ["8001:8000"]
    env_file: [.env]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/embeddings"]
      interval: 10s
      timeout: 5s
      retries: 10

  # ---------------- backend API ----------------
  server:
    image: adityamishra9/docchat-server:1
    command: ["node", "index.js"]
    restart: unless-stopped
    env_file: [.env]
    environment:
      NODE_ENV: production
      PORT: "8000"
      MONGODB_URI: mongodb://mongo:27017
      MONGODB_DB: docchat
      REDIS_HOST: valkey
      REDIS_PORT: "6379"
      QDRANT_URL: http://qdrant:6333
      EMBEDDINGS_URL: http://embedder:8000/embeddings
      CORS_ORIGIN: http://localhost:49151
      TESSDATA_PREFIX: /usr/share/tesseract-ocr/4.00/tessdata
    depends_on: [valkey, mongo, qdrant, embedder]
    ports: ["8000:8000"]

  # ---------------- worker ----------------
  worker:
    image: adityamishra9/docchat-server:1
    command: ["node", "worker.js"]
    restart: unless-stopped
    env_file: [.env]
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://mongo:27017
      MONGODB_DB: docchat
      REDIS_HOST: valkey
      REDIS_PORT: "6379"
      QDRANT_URL: http://qdrant:6333
      EMBEDDINGS_URL: http://embedder:8000/embeddings
      TESSDATA_PREFIX: /usr/share/tesseract-ocr/4.00/tessdata
    depends_on: [valkey, mongo, qdrant, embedder]

  # ---------------- frontend ----------------
  client:
    image: adityamishra9/docchat-client:1
    restart: unless-stopped
    env_file: [.env]
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:8000
      NODE_ENV: production
      PORT: "49151"
      HOSTNAME: "0.0.0.0"
    depends_on: [server]
    ports: ["49151:49151"]

volumes:
  mongo_data:
  qdrant_data:
