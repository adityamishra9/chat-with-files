name: chat-with-files
services:
  # ---------------- infra ----------------
  valkey:
    image: valkey/valkey:latest
    ports: ["6379:6379"]

  mongo:
    image: mongo:7
    ports: ["27018:27017"]
    volumes:
      - mongo_data:/data/db

  qdrant:
    image: qdrant/qdrant:latest
    ports: ["6333:6333"]
    volumes:
      - qdrant_data:/qdrant/storage

  embedder:
    build:
      context: ./embed-server
    ports: ["8001:8000"] # container:8000 -> host:8001
    env_file: [.env]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 10

  # ---------------- backend API ----------------
  server:
    build:
      context: ./server
    command: ["node", "index.js"]
    restart: unless-stopped
    env_file: [.env]
    environment:
      NODE_ENV: production
      PORT: "8000"
      MONGODB_URI: mongodb://mongo:27017
      MONGODB_DB: docchat
      REDIS_HOST: valkey
      REDIS_PORT: "6379"
      QDRANT_URL: http://qdrant:6333
      EMBEDDINGS_URL: http://embedder:8000/embeddings
      # Make sure your CORS allows the client container host OR use * in dev
      CORS_ORIGIN: http://localhost:3000
      TESSDATA_PREFIX: /usr/share/tesseract-ocr/4.00/tessdata
    depends_on:
      - valkey
      - mongo
      - qdrant
      - embedder
    ports: ["8000:8000"]

  # ---------------- worker (shares server image) ----------------
  worker:
    build:
      context: ./server
    command: ["node", "worker.js"]
    restart: unless-stopped
    env_file: [.env]
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://mongo:27017
      MONGODB_DB: docchat
      REDIS_HOST: valkey
      REDIS_PORT: "6379"
      QDRANT_URL: http://qdrant:6333
      EMBEDDINGS_URL: http://embedder:8000/embeddings
      TESSDATA_PREFIX: /usr/share/tesseract-ocr/4.00/tessdata
    depends_on:
      - valkey
      - mongo
      - qdrant
      - embedder

  # ---------------- frontend ----------------
  client:
    build:
      context: ./client
    restart: unless-stopped
    env_file: [.env]
    environment:
      NEXT_PUBLIC_API_BASE: http://server:8000
      NODE_ENV: production
      PORT: "3000"
      HOSTNAME: "0.0.0.0"
    depends_on:
      - server
    ports: ["3000:3000"]

volumes:
  mongo_data:
  qdrant_data:
